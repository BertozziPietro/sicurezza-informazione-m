import socket
from math import gcd

HOST = "localhost"
PORT = 2002

def recv_until(marker):
    data = b""
    while not data.endswith(marker):
        data += s.recv(1)
    return data.decode()

def get_k(x):
    s.sendall(b"1\n")
    recv_until(b"Plaintext > ")
    s.sendall(f"{x}\n".encode())
    recv_until(b"\n")
    enc_x = int(recv_until(b"\n").strip().split()[-1])

    recv_until(b"> ")
    s.sendall(b"1\n")
    recv_until(b"Plaintext > ")
    s.sendall(f"{x * x}\n".encode())
    recv_until(b"\n")
    enc_x2 = int(recv_until(b"\n").strip().split()[-1])
    return enc_x**2 - enc_x2

while True:
    try:
        s = socket.create_connection((HOST, PORT))
        banner = recv_until(b"> ")
        enc_flag_line = [line for line in banner.split("\n") if "Encrypted flag:" in line][0]
        enc_flag = int(enc_flag_line.split(":")[1].strip())
        print(enc_flag_line)

        n = 0
        for x in [123457, 987643]:
            k = get_k(x)
            if n == 0:
                n = k
            else:
                n = gcd(n, k)
            recv_until(b"> ")

        p = 65537 
        p_inv = pow(p, -1, n)
        c = (enc_flag * p_inv) % n

        s.sendall(b"2\n")
        recv_until(b"Ciphertext > ")
        s.sendall(f"{c}\n".encode())
        recv_until(b"\n")
        m1 = int(recv_until(b"\n").strip().split()[-1])

        recv_until(b"> ")
        s.sendall(b"2\n")
        recv_until(b"Ciphertext > ")
        s.sendall(f"{p}\n".encode())
        recv_until(b"\n")
        m2 = int(recv_until(b"\n").strip().split()[-1])

        flag = (m1 * m2) % n
        flag_str = flag.to_bytes((flag.bit_length() + 7) // 8, "big").decode()
        print("Flag:", flag_str)
        print("Exploit executed successfully.")
        break

    except (UnicodeDecodeError, ValueError, ConnectionError, IndexError) as e:
        print(f"I was unluky... Let's try again")
        continue
